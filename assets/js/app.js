// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();
tg.ready();

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe?.user;
if (user) {
    document.getElementById('userId').textContent = user.id;
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
let currentGame = null;
let currentBet = 10;
let userBalance = 1000;

// –°–∏–º–≤–æ–ª—ã –¥–ª—è —Å–ª–æ—Ç–æ–≤
const symbols = ['üçí', 'üçä', 'üçá', 'üçé', 'üçì', 'üçâ'];

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–≥—Ä—ã
function openGame(gameType) {
    currentGame = gameType;
    const modal = document.getElementById('gameModal');
    const gameTitle = document.getElementById('gameTitle');
    const gameContent = document.getElementById('gameContent');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    switch(gameType) {
        case 'doghouse':
            gameTitle.textContent = 'The Dog House Megaways';
            setupDogHouseGame(gameContent);
            break;
        case 'slots':
            gameTitle.textContent = '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã';
            setupSlotGame(gameContent);
            break;
        case 'blackjack':
            gameTitle.textContent = '–ë–ª—ç–∫–¥–∂–µ–∫';
            setupBlackjackGame(gameContent);
            break;
        case 'roulette':
            gameTitle.textContent = '–†—É–ª–µ—Ç–∫–∞';
            setupRouletteGame(gameContent);
            break;
        case 'poker':
            gameTitle.textContent = '–ü–æ–∫–µ—Ä';
            setupPokerGame(gameContent);
            break;
    }
    
    modal.style.display = 'block';
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä—ã The Dog House Megaways
function setupDogHouseGame(container) {
    container.innerHTML = `
        <div style="text-align: center;">
            <div style="background: #1a1a2e; padding: 1rem; border-radius: 10px; margin: 1rem 0;">
                <h3 style="color: #ffd700; margin-bottom: 1rem;">üé∞ The Dog House Megaways</h3>
                <div style="display: grid; grid-template-columns: repeat(6, 1fr); gap: 5px; margin: 1rem 0;">
                    ${Array(6).fill().map(() => 
                        `<div style="background: #fff; color: #1a1a2e; padding: 0.5rem; border-radius: 5px; font-size: 1.2rem; font-weight: bold;">üè†</div>`
                    ).join('')}
                </div>
                <div style="color: #ffd700; font-weight: bold; margin: 1rem 0;">
                    –ú–Ω–æ–∂–∏—Ç–µ–ª—å: x2 | –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–ø–∏–Ω—ã: 0
                </div>
            </div>
            <div style="display: flex; justify-content: center; gap: 1rem; margin: 1rem 0;">
                <button class="bet-btn" onclick="changeBet(-5)">-5</button>
                <span class="bet-amount">${currentBet}‚Ç¨</span>
                <button class="bet-btn" onclick="changeBet(5)">+5</button>
            </div>
            <button class="spin-btn" onclick="spinDogHouse()">SPIN</button>
        </div>
    `;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤
function setupSlotGame(container) {
    container.innerHTML = `
        <div class="slot-machine">
            <div class="slot-window">
                <div class="slot-reel" id="reel1">üçí</div>
                <div class="slot-reel" id="reel2">üçä</div>
                <div class="slot-reel" id="reel3">üçá</div>
            </div>
            <div class="bet-controls">
                <button class="bet-btn" onclick="changeBet(-5)">-5</button>
                <span class="bet-amount">${currentBet}‚Ç¨</span>
                <button class="bet-btn" onclick="changeBet(5)">+5</button>
            </div>
            <button class="spin-btn" onclick="spinSlot()">SPIN</button>
        </div>
    `;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–ª—ç–∫–¥–∂–µ–∫–∞
function setupBlackjackGame(container) {
    container.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <h3 style="color: #ffd700;">‚ô†Ô∏è –ë–ª—ç–∫–¥–∂–µ–∫</h3>
            <p>–ò–≥—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
            <p style="color: #ccc; font-size: 0.9rem;">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!</p>
        </div>
    `;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä—É–ª–µ—Ç–∫–∏
function setupRouletteGame(container) {
    container.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <h3 style="color: #ffd700;">üé≤ –†—É–ª–µ—Ç–∫–∞</h3>
            <p>–ò–≥—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
            <p style="color: #ccc; font-size: 0.9rem;">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!</p>
        </div>
    `;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∫–µ—Ä–∞
function setupPokerGame(container) {
    container.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <h3 style="color: #ffd700;">‚ô•Ô∏è –ü–æ–∫–µ—Ä</h3>
            <p>–ò–≥—Ä–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
            <p style="color: #ccc; font-size: 0.9rem;">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!</p>
        </div>
    `;
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
function changeBet(amount) {
    currentBet = Math.max(5, Math.min(100, currentBet + amount));
    const betAmount = document.querySelector('.bet-amount');
    if (betAmount) {
        betAmount.textContent = currentBet + '‚Ç¨';
    }
}

// –°–ø–∏–Ω –¥–ª—è The Dog House
function spinDogHouse() {
    if (userBalance < currentBet) {
        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 'error');
        return;
    }
    
    userBalance -= currentBet;
    updateBalance();
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–ø–∏–Ω–æ–≤
    const reels = document.querySelectorAll('[style*="background: #fff"]');
    reels.forEach(reel => {
        reel.classList.add('spinning');
    });
    
    setTimeout(() => {
        reels.forEach(reel => {
            reel.classList.remove('spinning');
            reel.textContent = symbols[Math.floor(Math.random() * symbols.length)];
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
        const winAmount = Math.random() > 0.7 ? currentBet * 2 : 0;
        if (winAmount > 0) {
            userBalance += winAmount;
            showNotification(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã–∏–≥—Ä—ã—à: ${winAmount}‚Ç¨`, 'success');
        }
        
        updateBalance();
        sendDataToBot({
            game: 'doghouse',
            bet: currentBet,
            win: winAmount,
            balance: userBalance
        });
    }, 1000);
}

// –°–ø–∏–Ω –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Å–ª–æ—Ç–æ–≤
function spinSlot() {
    if (userBalance < currentBet) {
        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 'error');
        return;
    }
    
    userBalance -= currentBet;
    updateBalance();
    
    const reels = document.querySelectorAll('.slot-reel');
    reels.forEach(reel => {
        reel.classList.add('spinning');
    });
    
    setTimeout(() => {
        reels.forEach(reel => {
            reel.classList.remove('spinning');
            reel.textContent = symbols[Math.floor(Math.random() * symbols.length)];
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
        const reel1 = reels[0].textContent;
        const reel2 = reels[1].textContent;
        const reel3 = reels[2].textContent;
        
        let winAmount = 0;
        if (reel1 === reel2 && reel2 === reel3) {
            winAmount = currentBet * 3;
            showNotification(`–î–∂–µ–∫–ø–æ—Ç! –í—ã–∏–≥—Ä—ã—à: ${winAmount}‚Ç¨`, 'success');
        } else if (reel1 === reel2 || reel2 === reel3 || reel1 === reel3) {
            winAmount = currentBet * 1.5;
            showNotification(`–í—ã–∏–≥—Ä—ã—à: ${winAmount}‚Ç¨`, 'success');
        }
        
        if (winAmount > 0) {
            userBalance += winAmount;
        }
        
        updateBalance();
        sendDataToBot({
            game: 'slots',
            bet: currentBet,
            win: winAmount,
            balance: userBalance
        });
    }, 1000);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
function updateBalance() {
    document.getElementById('userBalance').textContent = userBalance + '‚Ç¨';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
function showProfile() {
    tg.showAlert(`
üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

ID: ${user?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
–ë–∞–ª–∞–Ω—Å: ${userBalance}‚Ç¨
–ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: ${Math.floor(Math.random() * 50) + 1}
–û–±—â–∏–π –≤—ã–∏–≥—Ä—ã—à: ${Math.floor(Math.random() * 1000) + 100}‚Ç¨

üé∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä:
‚Ä¢ The Dog House: ${Math.floor(Math.random() * 20) + 1} –∏–≥—Ä
‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å–ª–æ—Ç—ã: ${Math.floor(Math.random() * 30) + 1} –∏–≥—Ä
‚Ä¢ –ë–ª—ç–∫–¥–∂–µ–∫: 0 –∏–≥—Ä
‚Ä¢ –†—É–ª–µ—Ç–∫–∞: 0 –∏–≥—Ä
‚Ä¢ –ü–æ–∫–µ—Ä: 0 –∏–≥—Ä
    `);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–Ω—É—Å—ã
function showBonuses() {
    tg.showAlert(`
üéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã

üéØ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å
‚Ä¢ 200% –¥–æ 1000‚Ç¨ –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç: 10‚Ç¨

üí∞ –ë–µ–∑–¥–µ–ø–æ–∑–∏—Ç–Ω—ã–π –±–æ–Ω—É—Å
‚Ä¢ 50‚Ç¨ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –í–µ–π–¥–∂–µ—Ä: x35

‚≠ê –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ –î–æ 15% –∫—ç—à–±—ç–∫ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä

üé™ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã
‚Ä¢ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: 10,000‚Ç¨
‚Ä¢ –£—á–∞—Å—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞

–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ–Ω—É—Å–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
    `);
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeModal() {
    document.getElementById('gameModal').style.display = 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'success') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
function sendDataToBot(data) {
    if (tg.isVersionAtLeast('6.1')) {
        tg.sendData(JSON.stringify(data));
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
window.onclick = function(event) {
    const modal = document.getElementById('gameModal');
    if (event.target === modal) {
        closeModal();
    }
} 